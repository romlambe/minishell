- echo hey | cat
OK
- echo hey > output.txt | cat
OK
- < input cat > output.txt | cat
OK
- < input cat > output.txt | cat > end.txt
OK
- < input cat > output.txt
OK
echo hey > output.txt | cat > end.txt
OK
- cat file.txt | < output.txt | wc -l
KO
- echo cool > output.txt | pwd > end.txt | env > fin.txt
OK
- echo cool > output.txt | pwd > end.txt | env > fin.txt | export > output.txt
OK
cat file.txt < end.txt < fin.txt
OK
echo cool > output.txt | < file.txt cat
OK
- < input cat > output.txt | cat
OK
- < output.txt cat | < file.txt cat | < end.txt cat
OK
- < output.txt < file.txt < end.txt cat
OK
- < output.txt < file.txt < end.txt cat | cat
OK
- < output.txt < file.txt < end.txt cat | echo cool
OK
- echo hey > output.txt | < end.txt ls
OK
- echo hola > output.txt | cat > end.txt
OK
- Fix pb with : built-ins > output | input < cmd  => Finally GOOD !!!
=> Same with just cmd.
=> Work if we just have output on first block
=> Doesn't work if we have output in first block & input in 2nd

- export MY_VAR="value with spaces" => KO : NEED TO TAKE INTO ACCOUNT QUOTES (not spaces)!



TESTS BUILT-INS : Cmds seules
- echo hola > output => OK
- echo "'ok' hello" > output => OK
- echo -n "ta race" > output => OK BUT PRINT ON TERMINAL & NOT OUTPUT
- echo '"""pourquoi"""' "''toi''" => OK
- echo '-n' 'cat' cat cat > output => OK
- echo cat cat "'''cat''''" > output => OK
- echo => OK 
- < input echo => OK
- < input echo hola => OK
- pwd => OK
- pwd > output.txt => OK
- < input.txt pwd => OK
- env => OK
- env > output.txt => OK
- exit => OK 
=> NEED TO TEST WITH SHELL LEVELS !!

- unset path => OK (error)
- unset $PATH= => OK (error)
- unset PATH= => OK (error)
- unset PATH => OK
- unset => OK 
- cd Libft/ => OK
- cd /home/jeza/Projects/Minishell1/Libft/ => OK
- cd => OK
- cd .. => OK
- export NAME=OK => OK
- export MY_VAR=value => OK
- export PATH=jeza => OK
- export => OK
- export VAR1=value1 VAR2=value2 VAR3=value3 => OK
- export MY_VAR="value with spaces" => KO : NEED TO TAKE INTO ACCOUNT QUOTES (not spaces)!
- export EMPTY_VAR= => OK
- export SPECIAL_VAR='!@#$%^&*()' => OK
- export =value => NEED TO CREATE AN ERROR !!

TESTS BUILT-INS : Cmds pipes
- echo hola > output.txt | cat > end.txt => OK
-  < file2 cat | echo hola > end.txt => OK
-  echo hey > output.txt | < end.txt ls => OK